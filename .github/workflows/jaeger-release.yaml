name: Jaeger Release
run-name: "Jaeger Release v${{ inputs.version }}"
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version'
        required: true
      dry-run:
        type: boolean
        description: 'Dry run'
        required: false
        default: true
      path-to-chart:
        description: 'Path to chart'
        required: true
        default: './charts/qubership-jaeger/Chart.yaml'

jobs:
  check-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Check if tag exists
        id: check_tag
        uses: netcracker/qubership-workflow-hub/actions/tag-action@v1.0.7
        with:
          ref: ${{ github.ref }}
          check-tag: 'true'
          create-tag: 'false'
          tag-name: v${{ github.event.inputs.version }}

  load-docker-build-components:
    needs: [check-tag]
    runs-on: ubuntu-latest
    outputs:
      component: ${{ steps.load_component.outputs.components }}
      platforms: ${{ steps.load_component.outputs.platforms }}
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Load Docker Configuration
      id: load_component
      run:  |
        verify=$(cat "$GITHUB_WORKSPACE/.github/docker-build-config.json" | jq '
        def verify_structure:
        .components as $components
        | .platforms as $platforms
        | ($components | type == "array")
        and (all($components[]; has("name") and has("file") and has("context")))
        and ($platforms | type == "string");
        verify_structure
        | if . then true else false end
        ')
        if [ ${verify} == 'true' ]; then
          echo "✅ $GITHUB_WORKSPACE/.github/docker-build-config.json file is valid"
          components=$(jq -c ".components" "$GITHUB_WORKSPACE/.github/docker-build-config.json")
          platforms=$(jq -c ".platforms" "$GITHUB_WORKSPACE/.github/docker-build-config.json")
        else
          echo "❗ $GITHUB_WORKSPACE/.github/docker-build-config.json file is invalid"
          echo "❗ $GITHUB_WORKSPACE/.github/docker-build-config.json file is invalid" >> $GITHUB_STEP_SUMMARY
          exit 1
        fi
        echo "components=${components}" >> $GITHUB_OUTPUT
        echo "platforms=${platforms}" >> $GITHUB_OUTPUT

  prepare-chart-and-tag:
    permissions:
      contents: write
    needs: [check-tag]
    runs-on: ubuntu-latest
    steps:
    - name: Change Chart Version Action
      uses: netcracker/qubership-workflow-hub/actions/chart-version@v1.0.7
      with:
        new-chart-version: ${{ github.event.inputs.version }}
        chart-yaml-path: ${{ github.event.inputs.path-to-chart }}

    - name: Run Commit and Push Action
      uses: Netcracker/qubership-workflow-hub/actions/commit-and-push@v1.0.7
      with:
        commit_message: "Update chart version to v${{ github.event.inputs.version }}"

    - name: "Create release tag"
      uses: netcracker/qubership-workflow-hub/actions/tag-action@v1.0.7
      with:
        ref: ${{ github.ref }}
        check-tag: 'false'
        create-tag: 'true'
        tag-name: v${{ github.event.inputs.version }}

  docker-build:
    permissions:
      contents: write
      packages: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        component: ${{ fromJson(needs.load-docker-build-components.outputs.component) }}
    needs: [prepare-chart-and-tag, load-docker-build-components]
    steps:
    - name: "Docker Build"
      id: docker_build
      uses: testpatchesorg/qubership-workflow-hub/actions/docker-action@docker-action
      with:
        ref: v${{ inputs.version }}
        download-artifact: false
        dry-run: ${{ inputs.dry-run }}
        component: ${{ toJson(matrix.component) }}
        platforms: ${{ needs.load-docker-build-components.outputs.platforms }}
        registry: docker.io,ghcr.io
        docker-io-login: ${{ vars.DOCKERHUB_USER }}
        docker-io-token: ${{ secrets.DOCKERHUB_RW_TOKEN }}
      env:
        GITHUB_TOKEN: ${{ github.token }}

  github-release:
    permissions:
      contents: write
    needs: [docker-build]
    uses: netcracker/qubership-workflow-hub/.github/workflows/release-drafter.yml@main
    with:
      version: ${{ github.event.inputs.version }}
      publish: true

  upload-assets:
    needs: [github-release]
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Archive and Upload Assets
      uses: netcracker/qubership-workflow-hub/actions/archive-and-upload-assets@v1.0.7
      with:
        config-path: './.github/assets-config.yml'
        dist-path: './dist'
        upload: true
        ref: ${{ github.event.inputs.version }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
